{"ast":null,"code":"import { Vector3 } from \"three\";\nconst _v1 = /* @__PURE__ */new Vector3();\nconst _v2 = /* @__PURE__ */new Vector3();\nconst _v3 = /* @__PURE__ */new Vector3();\nconst EPS = 1e-10;\nclass Capsule {\n  constructor(start = new Vector3(0, 0, 0), end = new Vector3(0, 1, 0), radius = 1) {\n    this.start = start;\n    this.end = end;\n    this.radius = radius;\n  }\n  clone() {\n    return new Capsule(this.start.clone(), this.end.clone(), this.radius);\n  }\n  set(start, end, radius) {\n    this.start.copy(start);\n    this.end.copy(end);\n    this.radius = radius;\n  }\n  copy(capsule) {\n    this.start.copy(capsule.start);\n    this.end.copy(capsule.end);\n    this.radius = capsule.radius;\n  }\n  getCenter(target) {\n    return target.copy(this.end).add(this.start).multiplyScalar(0.5);\n  }\n  translate(v) {\n    this.start.add(v);\n    this.end.add(v);\n  }\n  checkAABBAxis(p1x, p1y, p2x, p2y, minx, maxx, miny, maxy, radius) {\n    return (minx - p1x < radius || minx - p2x < radius) && (p1x - maxx < radius || p2x - maxx < radius) && (miny - p1y < radius || miny - p2y < radius) && (p1y - maxy < radius || p2y - maxy < radius);\n  }\n  intersectsBox(box) {\n    return this.checkAABBAxis(this.start.x, this.start.y, this.end.x, this.end.y, box.min.x, box.max.x, box.min.y, box.max.y, this.radius) && this.checkAABBAxis(this.start.x, this.start.z, this.end.x, this.end.z, box.min.x, box.max.x, box.min.z, box.max.z, this.radius) && this.checkAABBAxis(this.start.y, this.start.z, this.end.y, this.end.z, box.min.y, box.max.y, box.min.z, box.max.z, this.radius);\n  }\n  lineLineMinimumPoints(line1, line2) {\n    const r = _v1.copy(line1.end).sub(line1.start);\n    const s = _v2.copy(line2.end).sub(line2.start);\n    const w = _v3.copy(line2.start).sub(line1.start);\n    const a = r.dot(s),\n      b = r.dot(r),\n      c = s.dot(s),\n      d = s.dot(w),\n      e = r.dot(w);\n    let t1, t2;\n    const divisor = b * c - a * a;\n    if (Math.abs(divisor) < EPS) {\n      const d1 = -d / c;\n      const d2 = (a - d) / c;\n      if (Math.abs(d1 - 0.5) < Math.abs(d2 - 0.5)) {\n        t1 = 0;\n        t2 = d1;\n      } else {\n        t1 = 1;\n        t2 = d2;\n      }\n    } else {\n      t1 = (d * a + e * c) / divisor;\n      t2 = (t1 * a - d) / c;\n    }\n    t2 = Math.max(0, Math.min(1, t2));\n    t1 = Math.max(0, Math.min(1, t1));\n    const point1 = r.multiplyScalar(t1).add(line1.start);\n    const point2 = s.multiplyScalar(t2).add(line2.start);\n    return [point1, point2];\n  }\n}\nexport { Capsule };","map":{"version":3,"names":["Vector3","_v1","_v2","_v3","EPS","Capsule","constructor","start","end","radius","clone","set","copy","capsule","getCenter","target","add","multiplyScalar","translate","v","checkAABBAxis","p1x","p1y","p2x","p2y","minx","maxx","miny","maxy","intersectsBox","box","x","y","min","max","z","lineLineMinimumPoints","line1","line2","r","sub","s","w","a","dot","b","c","d","e","t1","t2","divisor","Math","abs","d1","d2","point1","point2"],"sources":["/Users/rohullahkarimi/Local/laatuLakki_main/client/node_modules/three-stdlib/math/Capsule.js"],"sourcesContent":["import { Vector3 } from \"three\";\nconst _v1 = /* @__PURE__ */ new Vector3();\nconst _v2 = /* @__PURE__ */ new Vector3();\nconst _v3 = /* @__PURE__ */ new Vector3();\nconst EPS = 1e-10;\nclass Capsule {\n  constructor(start = new Vector3(0, 0, 0), end = new Vector3(0, 1, 0), radius = 1) {\n    this.start = start;\n    this.end = end;\n    this.radius = radius;\n  }\n  clone() {\n    return new Capsule(this.start.clone(), this.end.clone(), this.radius);\n  }\n  set(start, end, radius) {\n    this.start.copy(start);\n    this.end.copy(end);\n    this.radius = radius;\n  }\n  copy(capsule) {\n    this.start.copy(capsule.start);\n    this.end.copy(capsule.end);\n    this.radius = capsule.radius;\n  }\n  getCenter(target) {\n    return target.copy(this.end).add(this.start).multiplyScalar(0.5);\n  }\n  translate(v) {\n    this.start.add(v);\n    this.end.add(v);\n  }\n  checkAABBAxis(p1x, p1y, p2x, p2y, minx, maxx, miny, maxy, radius) {\n    return (minx - p1x < radius || minx - p2x < radius) && (p1x - maxx < radius || p2x - maxx < radius) && (miny - p1y < radius || miny - p2y < radius) && (p1y - maxy < radius || p2y - maxy < radius);\n  }\n  intersectsBox(box) {\n    return this.checkAABBAxis(\n      this.start.x,\n      this.start.y,\n      this.end.x,\n      this.end.y,\n      box.min.x,\n      box.max.x,\n      box.min.y,\n      box.max.y,\n      this.radius\n    ) && this.checkAABBAxis(\n      this.start.x,\n      this.start.z,\n      this.end.x,\n      this.end.z,\n      box.min.x,\n      box.max.x,\n      box.min.z,\n      box.max.z,\n      this.radius\n    ) && this.checkAABBAxis(\n      this.start.y,\n      this.start.z,\n      this.end.y,\n      this.end.z,\n      box.min.y,\n      box.max.y,\n      box.min.z,\n      box.max.z,\n      this.radius\n    );\n  }\n  lineLineMinimumPoints(line1, line2) {\n    const r = _v1.copy(line1.end).sub(line1.start);\n    const s = _v2.copy(line2.end).sub(line2.start);\n    const w = _v3.copy(line2.start).sub(line1.start);\n    const a = r.dot(s), b = r.dot(r), c = s.dot(s), d = s.dot(w), e = r.dot(w);\n    let t1, t2;\n    const divisor = b * c - a * a;\n    if (Math.abs(divisor) < EPS) {\n      const d1 = -d / c;\n      const d2 = (a - d) / c;\n      if (Math.abs(d1 - 0.5) < Math.abs(d2 - 0.5)) {\n        t1 = 0;\n        t2 = d1;\n      } else {\n        t1 = 1;\n        t2 = d2;\n      }\n    } else {\n      t1 = (d * a + e * c) / divisor;\n      t2 = (t1 * a - d) / c;\n    }\n    t2 = Math.max(0, Math.min(1, t2));\n    t1 = Math.max(0, Math.min(1, t1));\n    const point1 = r.multiplyScalar(t1).add(line1.start);\n    const point2 = s.multiplyScalar(t2).add(line2.start);\n    return [point1, point2];\n  }\n}\nexport {\n  Capsule\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}