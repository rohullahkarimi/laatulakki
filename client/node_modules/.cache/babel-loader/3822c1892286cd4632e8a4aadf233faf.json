{"ast":null,"code":"var __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value\n}) : obj[key] = value;\nvar __publicField = (obj, key, value) => {\n  __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n  return value;\n};\nimport { Color } from \"three\";\nimport { Pass } from \"./Pass.js\";\nclass RenderPass extends Pass {\n  constructor(scene, camera, overrideMaterial, clearColor, clearAlpha = 0) {\n    super();\n    __publicField(this, \"scene\");\n    __publicField(this, \"camera\");\n    __publicField(this, \"overrideMaterial\");\n    __publicField(this, \"clearColor\");\n    __publicField(this, \"clearAlpha\");\n    __publicField(this, \"clearDepth\", false);\n    __publicField(this, \"_oldClearColor\", new Color());\n    this.scene = scene;\n    this.camera = camera;\n    this.overrideMaterial = overrideMaterial;\n    this.clearColor = clearColor;\n    this.clearAlpha = clearAlpha;\n    this.clear = true;\n    this.needsSwap = false;\n  }\n  render(renderer, writeBuffer, readBuffer) {\n    let oldAutoClear = renderer.autoClear;\n    renderer.autoClear = false;\n    let oldClearAlpha;\n    let oldOverrideMaterial = null;\n    if (this.overrideMaterial !== void 0) {\n      oldOverrideMaterial = this.scene.overrideMaterial;\n      this.scene.overrideMaterial = this.overrideMaterial;\n    }\n    if (this.clearColor) {\n      renderer.getClearColor(this._oldClearColor);\n      oldClearAlpha = renderer.getClearAlpha();\n      renderer.setClearColor(this.clearColor, this.clearAlpha);\n    }\n    if (this.clearDepth) {\n      renderer.clearDepth();\n    }\n    renderer.setRenderTarget(this.renderToScreen ? null : readBuffer);\n    if (this.clear) renderer.clear(renderer.autoClearColor, renderer.autoClearDepth, renderer.autoClearStencil);\n    renderer.render(this.scene, this.camera);\n    if (this.clearColor) {\n      renderer.setClearColor(this._oldClearColor, oldClearAlpha);\n    }\n    if (this.overrideMaterial !== void 0) {\n      this.scene.overrideMaterial = oldOverrideMaterial;\n    }\n    renderer.autoClear = oldAutoClear;\n  }\n}\nexport { RenderPass };","map":{"version":3,"names":["__defProp","Object","defineProperty","__defNormalProp","obj","key","value","enumerable","configurable","writable","__publicField","Color","Pass","RenderPass","constructor","scene","camera","overrideMaterial","clearColor","clearAlpha","clear","needsSwap","render","renderer","writeBuffer","readBuffer","oldAutoClear","autoClear","oldClearAlpha","oldOverrideMaterial","getClearColor","_oldClearColor","getClearAlpha","setClearColor","clearDepth","setRenderTarget","renderToScreen","autoClearColor","autoClearDepth","autoClearStencil"],"sources":["/Users/rohullahkarimi/Local/laatuLakki_main/client/node_modules/three-stdlib/postprocessing/RenderPass.js"],"sourcesContent":["var __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField = (obj, key, value) => {\n  __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n  return value;\n};\nimport { Color } from \"three\";\nimport { Pass } from \"./Pass.js\";\nclass RenderPass extends Pass {\n  constructor(scene, camera, overrideMaterial, clearColor, clearAlpha = 0) {\n    super();\n    __publicField(this, \"scene\");\n    __publicField(this, \"camera\");\n    __publicField(this, \"overrideMaterial\");\n    __publicField(this, \"clearColor\");\n    __publicField(this, \"clearAlpha\");\n    __publicField(this, \"clearDepth\", false);\n    __publicField(this, \"_oldClearColor\", new Color());\n    this.scene = scene;\n    this.camera = camera;\n    this.overrideMaterial = overrideMaterial;\n    this.clearColor = clearColor;\n    this.clearAlpha = clearAlpha;\n    this.clear = true;\n    this.needsSwap = false;\n  }\n  render(renderer, writeBuffer, readBuffer) {\n    let oldAutoClear = renderer.autoClear;\n    renderer.autoClear = false;\n    let oldClearAlpha;\n    let oldOverrideMaterial = null;\n    if (this.overrideMaterial !== void 0) {\n      oldOverrideMaterial = this.scene.overrideMaterial;\n      this.scene.overrideMaterial = this.overrideMaterial;\n    }\n    if (this.clearColor) {\n      renderer.getClearColor(this._oldClearColor);\n      oldClearAlpha = renderer.getClearAlpha();\n      renderer.setClearColor(this.clearColor, this.clearAlpha);\n    }\n    if (this.clearDepth) {\n      renderer.clearDepth();\n    }\n    renderer.setRenderTarget(this.renderToScreen ? null : readBuffer);\n    if (this.clear)\n      renderer.clear(renderer.autoClearColor, renderer.autoClearDepth, renderer.autoClearStencil);\n    renderer.render(this.scene, this.camera);\n    if (this.clearColor) {\n      renderer.setClearColor(this._oldClearColor, oldClearAlpha);\n    }\n    if (this.overrideMaterial !== void 0) {\n      this.scene.overrideMaterial = oldOverrideMaterial;\n    }\n    renderer.autoClear = oldAutoClear;\n  }\n}\nexport {\n  RenderPass\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}