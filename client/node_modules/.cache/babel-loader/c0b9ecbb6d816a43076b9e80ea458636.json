{"ast":null,"code":"import { useState } from 'react';\nfunction useFormState(initialValues = {}) {\n  const [state, setState] = useState({\n    values: initialValues,\n    dirtyFields: {}\n  });\n  function update(name, value) {\n    setState({\n      ...state,\n      values: {\n        ...state.values,\n        [name]: value\n      },\n      dirtyFields: {\n        ...state.dirtyFields,\n        [name]: true\n      }\n    });\n  }\n  function updateAll(newFields = {}) {\n    setState({\n      ...state,\n      values: {\n        ...state.values,\n        ...newFields\n      },\n      dirtyFields: {\n        ...state.dirtyFields,\n        ...Object.keys(newFields).reduce((acc, item) => {\n          acc[item] = true;\n          return acc;\n        }, {})\n      }\n    });\n  }\n  function reset(values = initialValues) {\n    setState({\n      values,\n      dirtyFields: {}\n    });\n  }\n  return {\n    ...state,\n    update,\n    updateAll,\n    reset\n  };\n}\nexport default useFormState;","map":{"version":3,"names":["useState","useFormState","initialValues","state","setState","values","dirtyFields","update","name","value","updateAll","newFields","Object","keys","reduce","acc","item","reset"],"sources":["/Users/rohullahkarimi/Local/laatuLakki_main/client/node_modules/@flywire/react-hooks/dist/esm/hooks/useFormState/useFormState.js"],"sourcesContent":["import { useState } from 'react';\nfunction useFormState(initialValues = {}) {\n    const [state, setState] = useState({\n        values: initialValues,\n        dirtyFields: {},\n    });\n    function update(name, value) {\n        setState({\n            ...state,\n            values: { ...state.values, [name]: value },\n            dirtyFields: { ...state.dirtyFields, [name]: true },\n        });\n    }\n    function updateAll(newFields = {}) {\n        setState({\n            ...state,\n            values: { ...state.values, ...newFields },\n            dirtyFields: {\n                ...state.dirtyFields,\n                ...Object.keys(newFields).reduce((acc, item) => {\n                    acc[item] = true;\n                    return acc;\n                }, {}),\n            },\n        });\n    }\n    function reset(values = initialValues) {\n        setState({ values, dirtyFields: {} });\n    }\n    return { ...state, update, updateAll, reset };\n}\nexport default useFormState;\n"],"mappings":"AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,YAAYA,CAACC,aAAa,GAAG,CAAC,CAAC,EAAE;EACtC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGJ,QAAQ,CAAC;IAC/BK,MAAM,EAAEH,aAAa;IACrBI,WAAW,EAAE,CAAC;EAClB,CAAC,CAAC;EACF,SAASC,MAAMA,CAACC,IAAI,EAAEC,KAAK,EAAE;IACzBL,QAAQ,CAAC;MACL,GAAGD,KAAK;MACRE,MAAM,EAAE;QAAE,GAAGF,KAAK,CAACE,MAAM;QAAE,CAACG,IAAI,GAAGC;MAAM,CAAC;MAC1CH,WAAW,EAAE;QAAE,GAAGH,KAAK,CAACG,WAAW;QAAE,CAACE,IAAI,GAAG;MAAK;IACtD,CAAC,CAAC;EACN;EACA,SAASE,SAASA,CAACC,SAAS,GAAG,CAAC,CAAC,EAAE;IAC/BP,QAAQ,CAAC;MACL,GAAGD,KAAK;MACRE,MAAM,EAAE;QAAE,GAAGF,KAAK,CAACE,MAAM;QAAE,GAAGM;MAAU,CAAC;MACzCL,WAAW,EAAE;QACT,GAAGH,KAAK,CAACG,WAAW;QACpB,GAAGM,MAAM,CAACC,IAAI,CAACF,SAAS,CAAC,CAACG,MAAM,CAAC,CAACC,GAAG,EAAEC,IAAI,KAAK;UAC5CD,GAAG,CAACC,IAAI,CAAC,GAAG,IAAI;UAChB,OAAOD,GAAG;QACd,CAAC,EAAE,CAAC,CAAC;MACT;IACJ,CAAC,CAAC;EACN;EACA,SAASE,KAAKA,CAACZ,MAAM,GAAGH,aAAa,EAAE;IACnCE,QAAQ,CAAC;MAAEC,MAAM;MAAEC,WAAW,EAAE,CAAC;IAAE,CAAC,CAAC;EACzC;EACA,OAAO;IAAE,GAAGH,KAAK;IAAEI,MAAM;IAAEG,SAAS;IAAEO;EAAM,CAAC;AACjD;AACA,eAAehB,YAAY"},"metadata":{},"sourceType":"module"}