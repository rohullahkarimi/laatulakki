{"ast":null,"code":"var _jsxFileName = \"/Users/rohullahkarimi/Local/laatuLakki_main/client/src/components/Announcement.jsx\",\n  _s = $RefreshSig$();\nimport styled from \"styled-components\";\nimport { notificationBar } from \"../theme\";\nimport { useTranslation } from \"react-i18next\";\nimport { smartPhone } from \"../responsive\";\nimport { useEffect, useRef, useState } from \"react\";\nimport { publicRequest } from \"../requestMethods\";\n//import { format } from 'date-fns';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Container = styled.div`\n    height: 30px;\n    /* background-color: #ff46e4; */\n    background-color: #${notificationBar}; \n    color: white;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    font-size: 14px;\n    font-weight: 500;\n    ${smartPhone({\n  height: \"47px\",\n  textAlign: \"center\"\n})}\n`;\n_c = Container;\nconst Announcement = () => {\n  _s();\n  const {\n    t\n  } = useTranslation();\n  const freeDelivery = useRef(false);\n  const [setting, setSetting] = useState({\n    \"status\": false,\n    \"message\": \"\",\n    \"expire\": \"2023-02-22\"\n  });\n  useEffect(() => {\n    // get setting data\n    const getSetting = async () => {\n      try {\n        const res = await publicRequest.get(\"/setting\");\n        let updatedValue = {};\n        updatedValue = {\n          status: res.data[0].status,\n          message: res.data[0].message,\n          expire: res.data[0].expire\n        };\n        setSetting(setting => ({\n          ...setting,\n          ...updatedValue\n        }));\n      } catch (err) {\n        console.log(err);\n      }\n    };\n    getSetting();\n  }, []);\n\n  // check delivery price\n  const checkDeliveryCost = () => {\n    if (setting.status === true) {\n      var ExpireDate = setting.expire;\n      var CurrentDate = new Date();\n      ExpireDate = new Date(ExpireDate);\n      if (CurrentDate > ExpireDate) {\n        freeDelivery.current = false;\n      } else {\n        freeDelivery.current = true;\n      }\n    } else {\n      freeDelivery.current = false;\n    }\n  };\n  checkDeliveryCost();\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: freeDelivery.current === true ? t(\"freeDeliveryMessage\", {\n      deliveryDateExpire: setting.message\n    }) : t('announcement_text')\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n};\n_s(Announcement, \"3lOXSACUL+hTYh1aA2c48Y3cPXE=\", false, function () {\n  return [useTranslation];\n});\n_c2 = Announcement;\nexport default Announcement;\nvar _c, _c2;\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"Announcement\");","map":{"version":3,"names":["styled","notificationBar","useTranslation","smartPhone","useEffect","useRef","useState","publicRequest","jsxDEV","_jsxDEV","Container","div","height","textAlign","_c","Announcement","_s","t","freeDelivery","setting","setSetting","getSetting","res","get","updatedValue","status","data","message","expire","err","console","log","checkDeliveryCost","ExpireDate","CurrentDate","Date","current","children","deliveryDateExpire","fileName","_jsxFileName","lineNumber","columnNumber","_c2","$RefreshReg$"],"sources":["/Users/rohullahkarimi/Local/laatuLakki_main/client/src/components/Announcement.jsx"],"sourcesContent":["import styled from \"styled-components\"\nimport { notificationBar } from \"../theme\"\nimport { useTranslation } from \"react-i18next\";\nimport { smartPhone } from \"../responsive\"\nimport { useEffect, useRef, useState } from \"react\";\nimport { publicRequest } from \"../requestMethods\";\n//import { format } from 'date-fns';\n\nconst Container = styled.div`\n    height: 30px;\n    /* background-color: #ff46e4; */\n    background-color: #${notificationBar}; \n    color: white;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    font-size: 14px;\n    font-weight: 500;\n    ${smartPhone({height: \"47px\", textAlign: \"center\"})}\n`\n\nconst Announcement = () => {\n  const { t } = useTranslation();\n  const freeDelivery = useRef(false);\n  const [setting, setSetting] = useState({\n    \"status\": false,\n    \"message\": \"\",\n    \"expire\": \"2023-02-22\",\n  })\n\n\n  useEffect(() => {\n    // get setting data\n    const getSetting = async ()=> {\n      try{\n          const res = await publicRequest.get(\"/setting\");\n          \n          let updatedValue = {};\n          updatedValue = {\n            status: res.data[0].status,\n            message: res.data[0].message,\n            expire: res.data[0].expire,\n          };\n          \n          setSetting(setting => ({\n            ...setting,\n            ...updatedValue\n          }));\n          \n      }catch(err){\n          console.log(err)\n      }\n    }\n    getSetting()\n  }, [])\n\n  // check delivery price\n  const checkDeliveryCost = () => {\n    if(setting.status === true){\n      var ExpireDate =  setting.expire;\n      var CurrentDate = new Date();\n      ExpireDate = new Date(ExpireDate);\n\n      if(CurrentDate > ExpireDate){\n        freeDelivery.current = false;\n      }else{\n        freeDelivery.current = true;\n      }\n    }else{\n      freeDelivery.current = false;\n    }\n  }\n  checkDeliveryCost()\n\n\n  return (\n    <Container>\n        {freeDelivery.current === true ? t(\"freeDeliveryMessage\", {deliveryDateExpire : setting.message}) : t('announcement_text')}\n    </Container>\n  )\n}\n\nexport default Announcement"],"mappings":"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"},"metadata":{},"sourceType":"module"}