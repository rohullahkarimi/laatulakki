{"ast":null,"code":"import { useState, useCallback } from 'react';\nconst FIRST_STEP = 0;\nfunction useStep({\n  steps,\n  initialStep = FIRST_STEP\n}) {\n  const [completed, setCompleted] = useState([]);\n  const [index, setIndex] = useState(initialStep);\n  const step = steps[index];\n  const inRange = useCallback(index => {\n    if (typeof index === 'number') {\n      if (index < FIRST_STEP) return FIRST_STEP;\n      if (index >= steps.length) return steps.length - 1;\n      return index;\n    }\n    return steps.findIndex(step => step.id === index) || FIRST_STEP;\n  }, [steps]);\n  const go = useCallback(nextStep => setIndex(inRange(nextStep)), [inRange]);\n  const next = useCallback(() => go(index + 1), [go, index]);\n  const prev = useCallback(() => go(index - 1), [go, index]);\n  const complete = useCallback((completeStep = index) => {\n    const completeStepIndex = inRange(completeStep);\n    const id = steps[completeStepIndex].id;\n    setCompleted([...Array.from(new Set([...completed, id]))]);\n  }, [completed, inRange, index, steps]);\n  const uncomplete = useCallback((uncompleteStep = index) => {\n    const uncompleteStepIndex = inRange(uncompleteStep);\n    const stepId = steps[uncompleteStepIndex].id;\n    setCompleted(completed.filter(id => id !== stepId));\n  }, [completed, inRange, index, steps]);\n  const reset = useCallback((resetStep = initialStep) => {\n    setIndex(resetStep);\n    setCompleted([]);\n  }, [initialStep]);\n  return {\n    complete,\n    completed,\n    index,\n    navigation: {\n      next,\n      prev,\n      go\n    },\n    step,\n    uncomplete,\n    reset\n  };\n}\nexport default useStep;","map":{"version":3,"names":["useState","useCallback","FIRST_STEP","useStep","steps","initialStep","completed","setCompleted","index","setIndex","step","inRange","length","findIndex","id","go","nextStep","next","prev","complete","completeStep","completeStepIndex","Array","from","Set","uncomplete","uncompleteStep","uncompleteStepIndex","stepId","filter","reset","resetStep","navigation"],"sources":["/Users/rohullahkarimi/Local/laatuLakki_main/client/node_modules/@flywire/react-hooks/dist/esm/hooks/useStep/useStep.js"],"sourcesContent":["import { useState, useCallback } from 'react';\nconst FIRST_STEP = 0;\nfunction useStep({ steps, initialStep = FIRST_STEP, }) {\n    const [completed, setCompleted] = useState([]);\n    const [index, setIndex] = useState(initialStep);\n    const step = steps[index];\n    const inRange = useCallback((index) => {\n        if (typeof index === 'number') {\n            if (index < FIRST_STEP)\n                return FIRST_STEP;\n            if (index >= steps.length)\n                return steps.length - 1;\n            return index;\n        }\n        return steps.findIndex((step) => step.id === index) || FIRST_STEP;\n    }, [steps]);\n    const go = useCallback((nextStep) => setIndex(inRange(nextStep)), [inRange]);\n    const next = useCallback(() => go(index + 1), [go, index]);\n    const prev = useCallback(() => go(index - 1), [go, index]);\n    const complete = useCallback((completeStep = index) => {\n        const completeStepIndex = inRange(completeStep);\n        const id = steps[completeStepIndex].id;\n        setCompleted([...Array.from(new Set([...completed, id]))]);\n    }, [completed, inRange, index, steps]);\n    const uncomplete = useCallback((uncompleteStep = index) => {\n        const uncompleteStepIndex = inRange(uncompleteStep);\n        const stepId = steps[uncompleteStepIndex].id;\n        setCompleted(completed.filter((id) => id !== stepId));\n    }, [completed, inRange, index, steps]);\n    const reset = useCallback((resetStep = initialStep) => {\n        setIndex(resetStep);\n        setCompleted([]);\n    }, [initialStep]);\n    return {\n        complete,\n        completed,\n        index,\n        navigation: { next, prev, go },\n        step,\n        uncomplete,\n        reset,\n    };\n}\nexport default useStep;\n"],"mappings":"AAAA,SAASA,QAAQ,EAAEC,WAAW,QAAQ,OAAO;AAC7C,MAAMC,UAAU,GAAG,CAAC;AACpB,SAASC,OAAOA,CAAC;EAAEC,KAAK;EAAEC,WAAW,GAAGH;AAAY,CAAC,EAAE;EACnD,MAAM,CAACI,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACQ,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAACK,WAAW,CAAC;EAC/C,MAAMK,IAAI,GAAGN,KAAK,CAACI,KAAK,CAAC;EACzB,MAAMG,OAAO,GAAGV,WAAW,CAAEO,KAAK,IAAK;IACnC,IAAI,OAAOA,KAAK,KAAK,QAAQ,EAAE;MAC3B,IAAIA,KAAK,GAAGN,UAAU,EAClB,OAAOA,UAAU;MACrB,IAAIM,KAAK,IAAIJ,KAAK,CAACQ,MAAM,EACrB,OAAOR,KAAK,CAACQ,MAAM,GAAG,CAAC;MAC3B,OAAOJ,KAAK;IAChB;IACA,OAAOJ,KAAK,CAACS,SAAS,CAAEH,IAAI,IAAKA,IAAI,CAACI,EAAE,KAAKN,KAAK,CAAC,IAAIN,UAAU;EACrE,CAAC,EAAE,CAACE,KAAK,CAAC,CAAC;EACX,MAAMW,EAAE,GAAGd,WAAW,CAAEe,QAAQ,IAAKP,QAAQ,CAACE,OAAO,CAACK,QAAQ,CAAC,CAAC,EAAE,CAACL,OAAO,CAAC,CAAC;EAC5E,MAAMM,IAAI,GAAGhB,WAAW,CAAC,MAAMc,EAAE,CAACP,KAAK,GAAG,CAAC,CAAC,EAAE,CAACO,EAAE,EAAEP,KAAK,CAAC,CAAC;EAC1D,MAAMU,IAAI,GAAGjB,WAAW,CAAC,MAAMc,EAAE,CAACP,KAAK,GAAG,CAAC,CAAC,EAAE,CAACO,EAAE,EAAEP,KAAK,CAAC,CAAC;EAC1D,MAAMW,QAAQ,GAAGlB,WAAW,CAAC,CAACmB,YAAY,GAAGZ,KAAK,KAAK;IACnD,MAAMa,iBAAiB,GAAGV,OAAO,CAACS,YAAY,CAAC;IAC/C,MAAMN,EAAE,GAAGV,KAAK,CAACiB,iBAAiB,CAAC,CAACP,EAAE;IACtCP,YAAY,CAAC,CAAC,GAAGe,KAAK,CAACC,IAAI,CAAC,IAAIC,GAAG,CAAC,CAAC,GAAGlB,SAAS,EAAEQ,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;EAC9D,CAAC,EAAE,CAACR,SAAS,EAAEK,OAAO,EAAEH,KAAK,EAAEJ,KAAK,CAAC,CAAC;EACtC,MAAMqB,UAAU,GAAGxB,WAAW,CAAC,CAACyB,cAAc,GAAGlB,KAAK,KAAK;IACvD,MAAMmB,mBAAmB,GAAGhB,OAAO,CAACe,cAAc,CAAC;IACnD,MAAME,MAAM,GAAGxB,KAAK,CAACuB,mBAAmB,CAAC,CAACb,EAAE;IAC5CP,YAAY,CAACD,SAAS,CAACuB,MAAM,CAAEf,EAAE,IAAKA,EAAE,KAAKc,MAAM,CAAC,CAAC;EACzD,CAAC,EAAE,CAACtB,SAAS,EAAEK,OAAO,EAAEH,KAAK,EAAEJ,KAAK,CAAC,CAAC;EACtC,MAAM0B,KAAK,GAAG7B,WAAW,CAAC,CAAC8B,SAAS,GAAG1B,WAAW,KAAK;IACnDI,QAAQ,CAACsB,SAAS,CAAC;IACnBxB,YAAY,CAAC,EAAE,CAAC;EACpB,CAAC,EAAE,CAACF,WAAW,CAAC,CAAC;EACjB,OAAO;IACHc,QAAQ;IACRb,SAAS;IACTE,KAAK;IACLwB,UAAU,EAAE;MAAEf,IAAI;MAAEC,IAAI;MAAEH;IAAG,CAAC;IAC9BL,IAAI;IACJe,UAAU;IACVK;EACJ,CAAC;AACL;AACA,eAAe3B,OAAO"},"metadata":{},"sourceType":"module"}