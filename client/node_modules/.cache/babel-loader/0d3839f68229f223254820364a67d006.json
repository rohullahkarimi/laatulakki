{"ast":null,"code":"import { useEffect, useRef, useState } from 'react';\nfunction useThrottle(value, delay, wallclock = 0) {\n  const lastTime = useRef(wallclock);\n  const [nextValue, setNextValue] = useState(value);\n  useEffect(() => {\n    const now = Date.now();\n    if (now - lastTime.current >= delay) {\n      lastTime.current = now;\n      setNextValue(value);\n    }\n  }, [value, delay]);\n  return nextValue;\n}\nexport default useThrottle;","map":{"version":3,"names":["useEffect","useRef","useState","useThrottle","value","delay","wallclock","lastTime","nextValue","setNextValue","now","Date","current"],"sources":["/Users/rohullahkarimi/Local/laatuLakki_main/client/node_modules/@flywire/react-hooks/dist/esm/hooks/useThrottle/useThrottle.js"],"sourcesContent":["import { useEffect, useRef, useState } from 'react';\nfunction useThrottle(value, delay, wallclock = 0) {\n    const lastTime = useRef(wallclock);\n    const [nextValue, setNextValue] = useState(value);\n    useEffect(() => {\n        const now = Date.now();\n        if (now - lastTime.current >= delay) {\n            lastTime.current = now;\n            setNextValue(value);\n        }\n    }, [value, delay]);\n    return nextValue;\n}\nexport default useThrottle;\n"],"mappings":"AAAA,SAASA,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AACnD,SAASC,WAAWA,CAACC,KAAK,EAAEC,KAAK,EAAEC,SAAS,GAAG,CAAC,EAAE;EAC9C,MAAMC,QAAQ,GAAGN,MAAM,CAACK,SAAS,CAAC;EAClC,MAAM,CAACE,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAACE,KAAK,CAAC;EACjDJ,SAAS,CAAC,MAAM;IACZ,MAAMU,GAAG,GAAGC,IAAI,CAACD,GAAG,CAAC,CAAC;IACtB,IAAIA,GAAG,GAAGH,QAAQ,CAACK,OAAO,IAAIP,KAAK,EAAE;MACjCE,QAAQ,CAACK,OAAO,GAAGF,GAAG;MACtBD,YAAY,CAACL,KAAK,CAAC;IACvB;EACJ,CAAC,EAAE,CAACA,KAAK,EAAEC,KAAK,CAAC,CAAC;EAClB,OAAOG,SAAS;AACpB;AACA,eAAeL,WAAW"},"metadata":{},"sourceType":"module"}