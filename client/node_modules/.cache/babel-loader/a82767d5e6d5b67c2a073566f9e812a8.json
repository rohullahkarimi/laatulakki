{"ast":null,"code":"var _jsxFileName = \"/Users/rohullahkarimi/Local/laatuLakki_main/client/src/components/cart/DeliveryMethod.jsx\",\n  _s = $RefreshSig$();\nimport '../../common/css/style.css';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useForm } from 'react-hook-form';\nimport { saveDeliveryMethod } from '../../redux/cartRedux';\nimport { useTranslation } from 'react-i18next';\nimport { useEffect, useRef, useState } from 'react';\n//import { format } from 'date-fns';\nimport { publicRequest } from '../../requestMethods';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DeliveryMethod = ({\n  navigation\n}) => {\n  _s();\n  const {\n    t\n  } = useTranslation();\n  const cart = useSelector(state => state.cart);\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors: customerPaymentMethodError\n    }\n  } = useForm();\n  const dispatch = useDispatch();\n  const freeDelivery = useRef(false);\n  const [setting, setSetting] = useState({\n    \"status\": false,\n    \"expire\": \"2023-02-22\"\n  });\n\n  //console.log(setting)\n  console.log(customerPaymentMethodError);\n  useEffect(() => {\n    // get setting data\n    const getSetting = async () => {\n      try {\n        const res = await publicRequest.get(\"/setting\");\n        let updatedValue = {};\n        updatedValue = {\n          status: res.data[0].status,\n          expire: res.data[0].expire\n        };\n        setSetting(setting => ({\n          ...setting,\n          ...updatedValue\n        }));\n      } catch (err) {\n        console.log(err);\n      }\n    };\n    getSetting();\n    window.scrollTo(0, 0);\n  }, []);\n\n  // check delivery price\n  const checkDeliveryCost = () => {\n    if (cart.total - cart.discountAmount >= 90) {\n      //console.log(\"> 90, yes free\")\n      freeDelivery.current = true;\n    } else if (setting.status === true) {\n      var ExpireDate = setting.expire;\n      var CurrentDate = new Date();\n      ExpireDate = new Date(ExpireDate);\n      if (CurrentDate > ExpireDate) {\n        //console.log(\"free true, not free because the date is expired free\")\n        freeDelivery.current = false;\n      } else {\n        //console.log(\"free true, yes free\")\n        freeDelivery.current = true;\n      }\n    } else {\n      //console.log(\"not free\")\n      freeDelivery.current = false;\n    }\n  };\n  checkDeliveryCost();\n  const handlePaymentMethod = data => {\n    // check if price equal or over 90€, make the delivery free of charge \n    var deliveryPriceSet = 0;\n    if (!freeDelivery.current) {\n      deliveryPriceSet = Number(parseFloat(data.deliveryPrice, 10).toFixed(2));\n    }\n    console.log(deliveryPriceSet);\n    const deliveryMethodConst = {\n      deliveryMethod: data.deliveryMethod,\n      deliveryPrice: deliveryPriceSet\n    };\n    console.log(deliveryMethodConst);\n    dispatch(saveDeliveryMethod(deliveryMethodConst));\n    navigation.next();\n  };\n  //console.log(customerPaymentMethodError)\n  //console.log(cart)\n\n  console.log(freeDelivery.current);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"customer_information_form\",\n      children: /*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"heading\",\n          children: t('chooseDeliveryMethod')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: t('weDeliverProductByPost')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"hidden\",\n          name: \"deliveryPrice\",\n          value: \"6.90\",\n          ...register(\"deliveryPrice\", {\n            required: false\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          id: \"paymentMethodForm\",\n          name: \"paymentMethodForm\",\n          onSubmit: handleSubmit(handlePaymentMethod),\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"inputwrapper\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              className: \"checkbox-input checkbox-larger\",\n              id: \"delivery\",\n              checked: \"checked\",\n              name: \"deliveryMethod\",\n              value: \"delivery\",\n              ...register(\"deliveryMethod\", {\n                required: true\n              }),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"delivery\",\n              className: \"checkbox-label checkbox-label-larger\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: freeDelivery.current === false ? t(\"delivery\") + \" (6.90 €)\" : t(\"delivery\") + \" (\" + t('freeOfCharge') + \")\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 139\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n};\n\n/*\n  <div className=\"inputwrapper\">\n    <input type=\"radio\" className=\"checkbox-input checkbox-larger\" id=\"pickup\" name=\"deliveryMethod\" value=\"pickup\"\n    {...register(\"deliveryMethod\",{ \n      required: true,\n    })}\n    disabled/>\n    <label htmlFor=\"pickup\" className=\"checkbox-label checkbox-label-larger\">\n    {t(\"pickup\")} ({t(\"notInUse\")}!)\n    </label>\n  </div>\n*/\n_s(DeliveryMethod, \"/6zC73rVYFEM3Dn6zqlPWTystW8=\", false, function () {\n  return [useTranslation, useSelector, useForm, useDispatch];\n});\n_c = DeliveryMethod;\nexport default DeliveryMethod;\nvar _c;\n$RefreshReg$(_c, \"DeliveryMethod\");","map":{"version":3,"names":["useDispatch","useSelector","useForm","saveDeliveryMethod","useTranslation","useEffect","useRef","useState","publicRequest","jsxDEV","_jsxDEV","DeliveryMethod","navigation","_s","t","cart","state","register","handleSubmit","formState","errors","customerPaymentMethodError","dispatch","freeDelivery","setting","setSetting","console","log","getSetting","res","get","updatedValue","status","data","expire","err","window","scrollTo","checkDeliveryCost","total","discountAmount","current","ExpireDate","CurrentDate","Date","handlePaymentMethod","deliveryPriceSet","Number","parseFloat","deliveryPrice","toFixed","deliveryMethodConst","deliveryMethod","next","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","name","value","required","id","onSubmit","checked","htmlFor","_c","$RefreshReg$"],"sources":["/Users/rohullahkarimi/Local/laatuLakki_main/client/src/components/cart/DeliveryMethod.jsx"],"sourcesContent":["import '../../common/css/style.css';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useForm } from 'react-hook-form';\nimport {  saveDeliveryMethod } from '../../redux/cartRedux';\nimport { useTranslation } from 'react-i18next';\nimport { useEffect, useRef, useState } from 'react';\n//import { format } from 'date-fns';\nimport { publicRequest } from '../../requestMethods';\n\n\n\nconst DeliveryMethod = ({navigation}) => {\n  const { t } = useTranslation();\n  const cart = useSelector((state) => state.cart);\n  const { register, handleSubmit, formState: { errors: customerPaymentMethodError } } = useForm();\n  const dispatch = useDispatch()\n  const freeDelivery = useRef(false);\n  const [setting, setSetting] = useState({\n    \"status\": false,\n    \"expire\": \"2023-02-22\",\n  })\n\n  //console.log(setting)\n  console.log(customerPaymentMethodError)\n\n  useEffect(() => {\n    // get setting data\n    const getSetting = async ()=> {\n      try{\n          const res = await publicRequest.get(\"/setting\");\n          \n          let updatedValue = {};\n          updatedValue = {\n            status: res.data[0].status,\n            expire: res.data[0].expire,\n          };\n          \n          setSetting(setting => ({\n            ...setting,\n            ...updatedValue\n          }));\n          \n      }catch(err){\n          console.log(err)\n      }\n    }\n    getSetting()\n\n\n    window.scrollTo(0, 0)\n  }, [])\n\n  \n  // check delivery price\n  const checkDeliveryCost = () => {\n    if((cart.total - cart.discountAmount) >= 90){\n      //console.log(\"> 90, yes free\")\n      freeDelivery.current = true;\n    }else if(setting.status === true){\n      var ExpireDate =  setting.expire;\n      var CurrentDate = new Date();\n      ExpireDate = new Date(ExpireDate);\n      \n      if(CurrentDate > ExpireDate){\n        //console.log(\"free true, not free because the date is expired free\")\n        freeDelivery.current = false;\n      }else{\n        //console.log(\"free true, yes free\")\n        freeDelivery.current = true;\n      }\n    }else{\n      //console.log(\"not free\")\n      freeDelivery.current = false;\n    }\n  }\n  checkDeliveryCost()\n \n  \n  const handlePaymentMethod = (data) => {\n    // check if price equal or over 90€, make the delivery free of charge \n    var deliveryPriceSet = 0\n    if(!freeDelivery.current){\n      deliveryPriceSet = Number(parseFloat(data.deliveryPrice, 10).toFixed(2))\n    }\n\n    console.log(deliveryPriceSet)\n    const deliveryMethodConst = {\n      deliveryMethod: data.deliveryMethod,\n      deliveryPrice: deliveryPriceSet\n    }\n    console.log(deliveryMethodConst)\n    dispatch(saveDeliveryMethod(deliveryMethodConst));\n    navigation.next()\n  }\n  //console.log(customerPaymentMethodError)\n  //console.log(cart)\n\n\n\n  console.log(freeDelivery.current)\n  return (\n    <div className='container'>\n    <div className=\"customer_information_form\">\n        <header className=\"header\">\n          <h2 className=\"heading\">{t('chooseDeliveryMethod')}</h2>\n          <p>{t('weDeliverProductByPost')}</p>\n\n          <input type=\"hidden\" name=\"deliveryPrice\" value=\"6.90\" \n            {...register(\"deliveryPrice\",{ \n              required: false,\n            })}\n          />\n\n          <form id=\"paymentMethodForm\" name=\"paymentMethodForm\" onSubmit={handleSubmit(handlePaymentMethod)}>\n            <div className=\"inputwrapper\">\n              <input type=\"radio\" className=\"checkbox-input checkbox-larger\" id=\"delivery\" checked=\"checked\" name=\"deliveryMethod\" value=\"delivery\"\n              {...register(\"deliveryMethod\",{ \n                required: true,\n              })}\n              required/>\n              <label htmlFor=\"delivery\" className=\"checkbox-label checkbox-label-larger\">\n                <span>{ freeDelivery.current === false ? t(\"delivery\") + \" (6.90 €)\" : t(\"delivery\") + \" (\"+t('freeOfCharge')+\")\" }</span><br/>\n              </label>\n            </div>\n          </form>\n        </header>\n    </div>\n    </div>\n  )\n};\n\n\n/*\n  <div className=\"inputwrapper\">\n    <input type=\"radio\" className=\"checkbox-input checkbox-larger\" id=\"pickup\" name=\"deliveryMethod\" value=\"pickup\"\n    {...register(\"deliveryMethod\",{ \n      required: true,\n    })}\n    disabled/>\n    <label htmlFor=\"pickup\" className=\"checkbox-label checkbox-label-larger\">\n    {t(\"pickup\")} ({t(\"notInUse\")}!)\n    </label>\n  </div>\n*/\nexport default DeliveryMethod;"],"mappings":"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"},"metadata":{},"sourceType":"module"}