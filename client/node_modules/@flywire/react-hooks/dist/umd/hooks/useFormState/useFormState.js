(function (factory) {
    if (typeof module === "object" && typeof module.exports === "object") {
        var v = factory(require, exports);
        if (v !== undefined) module.exports = v;
    }
    else if (typeof define === "function" && define.amd) {
        define(["require", "exports", "react"], factory);
    }
})(function (require, exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    const react_1 = require("react");
    function useFormState(initialValues = {}) {
        const [state, setState] = (0, react_1.useState)({
            values: initialValues,
            dirtyFields: {},
        });
        function update(name, value) {
            setState({
                ...state,
                values: { ...state.values, [name]: value },
                dirtyFields: { ...state.dirtyFields, [name]: true },
            });
        }
        function updateAll(newFields = {}) {
            setState({
                ...state,
                values: { ...state.values, ...newFields },
                dirtyFields: {
                    ...state.dirtyFields,
                    ...Object.keys(newFields).reduce((acc, item) => {
                        acc[item] = true;
                        return acc;
                    }, {}),
                },
            });
        }
        function reset(values = initialValues) {
            setState({ values, dirtyFields: {} });
        }
        return { ...state, update, updateAll, reset };
    }
    exports.default = useFormState;
});
