(function (factory) {
    if (typeof module === "object" && typeof module.exports === "object") {
        var v = factory(require, exports);
        if (v !== undefined) module.exports = v;
    }
    else if (typeof define === "function" && define.amd) {
        define(["require", "exports", "react"], factory);
    }
})(function (require, exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    const react_1 = require("react");
    function useLocalStorageState(key, defaultValue = '', { serialize = JSON.stringify, deserialize = JSON.parse } = {}) {
        const [state, setState] = (0, react_1.useState)(() => {
            const valueInLocalStorage = window.localStorage.getItem(key);
            if (valueInLocalStorage) {
                try {
                    return deserialize(valueInLocalStorage);
                }
                catch {
                    window.localStorage.removeItem(key);
                }
            }
            return typeof defaultValue === 'function' ? defaultValue() : defaultValue;
        });
        const prevKeyRef = (0, react_1.useRef)(key);
        (0, react_1.useEffect)(() => {
            const prevKey = prevKeyRef.current;
            if (prevKey !== key) {
                window.localStorage.removeItem(prevKey);
            }
            prevKeyRef.current = key;
            window.localStorage.setItem(key, serialize(state));
        }, [key, state, serialize]);
        return [state, setState];
    }
    exports.default = useLocalStorageState;
});
