"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const react_1 = require("react");
const ONE_SECOND_IN_MS = 1000;
const THIRTY_MINUTES_IN_MS = 30 * 60 * 1000;
function useIdleTimer({ events = ['mousemove', 'mousedown', 'keydown', 'touchstart', 'scroll'], interval = ONE_SECOND_IN_MS, timeout = THIRTY_MINUTES_IN_MS, } = {}) {
    const [timeleft, setTimeleft] = (0, react_1.useState)(timeout);
    const [idle, setIdle] = (0, react_1.useState)(false);
    const tick = () => {
        if (idle) {
            return;
        }
        const remaining = timeleft - interval;
        setTimeleft(remaining <= 0 ? 0 : remaining);
        setIdle(remaining <= 0);
    };
    const reset = (0, react_1.useCallback)(() => {
        if (idle) {
            return;
        }
        setTimeleft(timeout);
        setIdle(false);
    }, [timeout, idle]);
    (0, react_1.useEffect)(() => {
        if (timeout <= 0) {
            return;
        }
        events.forEach((evt) => window.addEventListener(evt, reset));
        const countdown = setInterval(tick, interval);
        return () => {
            events.forEach((evt) => window.removeEventListener(evt, reset));
            clearInterval(countdown);
        };
    });
    const stateAndHelpers = (0, react_1.useMemo)(() => ({
        idle,
        reset,
        timeleft,
    }), [idle, reset, timeleft]);
    return stateAndHelpers;
}
exports.default = useIdleTimer;
