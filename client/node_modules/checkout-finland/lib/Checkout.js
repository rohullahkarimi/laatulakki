"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.CheckoutClient = void 0;
var crypto = __importStar(require("crypto"));
var request_promise_1 = __importDefault(require("request-promise"));
var uuid_1 = require("uuid");
var CheckoutClient = /** @class */ (function () {
    function CheckoutClient(merchantId, secret) {
        this.algorithm = 'sha256';
        this.secret = secret;
        this.merchantId = merchantId;
        this.baseUrl = 'https://api.checkout.fi';
    }
    CheckoutClient.prototype.calculateHmac = function (params, body) {
        var hmacPayload = Object.keys(params)
            .sort()
            .map(function (key) { return [key, params[key]].join(':'); })
            .concat(body ? JSON.stringify(body) : '')
            .join('\n');
        return crypto
            .createHmac(this.algorithm, this.secret)
            .update(hmacPayload)
            .digest('hex');
    };
    CheckoutClient.prototype.makeRequest = function (body, method, path, transactionId, queryParams) {
        return __awaiter(this, void 0, void 0, function () {
            var timestamp, checkoutHeaders, url, signature, headers, req;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        timestamp = new Date();
                        checkoutHeaders = {
                            'checkout-account': this.merchantId,
                            'checkout-algorithm': 'sha256',
                            'checkout-method': method,
                            'checkout-nonce': uuid_1.v1(),
                            'checkout-timestamp': timestamp.toISOString()
                        };
                        if (transactionId)
                            checkoutHeaders['checkout-transaction-id'] = transactionId;
                        url = this.baseUrl + path;
                        signature = this.calculateHmac(checkoutHeaders, body);
                        headers = __assign(__assign({}, checkoutHeaders), { signature: signature });
                        req = { method: method, url: url, headers: headers, json: true, qs: queryParams };
                        if (body)
                            req.body = body;
                        return [4 /*yield*/, request_promise_1.default(req)];
                    case 1: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    CheckoutClient.prototype.createPayment = function (payment) {
        return __awaiter(this, void 0, void 0, function () {
            var err_1;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        _a.trys.push([0, 2, , 3]);
                        return [4 /*yield*/, this.makeRequest(payment, 'POST', '/payments')];
                    case 1: return [2 /*return*/, _a.sent()];
                    case 2:
                        err_1 = _a.sent();
                        console.log('Error in create payment: ', err_1.message);
                        throw err_1;
                    case 3: return [2 /*return*/];
                }
            });
        });
    };
    /**
     * Get data of single payment
     * @param id transactionId from checkout
     */
    CheckoutClient.prototype.getPayment = function (id) {
        return __awaiter(this, void 0, void 0, function () {
            var err_2;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        _a.trys.push([0, 2, , 3]);
                        return [4 /*yield*/, this.makeRequest(null, 'GET', '/payments/' + id, id)];
                    case 1: return [2 /*return*/, _a.sent()];
                    case 2:
                        err_2 = _a.sent();
                        console.log('Error in get payment: ', err_2.message);
                        throw err_2;
                    case 3: return [2 /*return*/];
                }
            });
        });
    };
    CheckoutClient.prototype.createRefund = function (refund, id) {
        return __awaiter(this, void 0, void 0, function () {
            var err_3;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        _a.trys.push([0, 2, , 3]);
                        return [4 /*yield*/, this.makeRequest(refund, 'POST', "/payments/" + id + "/refund", id)];
                    case 1: return [2 /*return*/, _a.sent()];
                    case 2:
                        err_3 = _a.sent();
                        console.log('Error in refund: ', err_3.message);
                        throw err_3;
                    case 3: return [2 /*return*/];
                }
            });
        });
    };
    CheckoutClient.prototype.createEmailRefund = function (refund, id) {
        return __awaiter(this, void 0, void 0, function () {
            var err_4;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        _a.trys.push([0, 2, , 3]);
                        return [4 /*yield*/, this.makeRequest(refund, 'POST', "/payments/" + id + "/refund/email", id)];
                    case 1: return [2 /*return*/, _a.sent()];
                    case 2:
                        err_4 = _a.sent();
                        console.log('Error in refund: ', err_4.message);
                        throw err_4;
                    case 3: return [2 /*return*/];
                }
            });
        });
    };
    CheckoutClient.prototype.getPaymentMethods = function (qs) {
        return __awaiter(this, void 0, void 0, function () {
            var err_5;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        _a.trys.push([0, 2, , 3]);
                        return [4 /*yield*/, this.makeRequest(null, 'GET', '/merchants/payment-providers', undefined, qs)];
                    case 1: return [2 /*return*/, _a.sent()];
                    case 2:
                        err_5 = _a.sent();
                        console.log('Error in get payment: ', err_5.message);
                        throw err_5;
                    case 3: return [2 /*return*/];
                }
            });
        });
    };
    CheckoutClient.prototype.getPaymentMethodsGrouped = function (qs) {
        return __awaiter(this, void 0, void 0, function () {
            var err_6;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        _a.trys.push([0, 2, , 3]);
                        return [4 /*yield*/, this.makeRequest(null, 'GET', '/merchants/grouped-payment-providers', undefined, qs)];
                    case 1: return [2 /*return*/, _a.sent()];
                    case 2:
                        err_6 = _a.sent();
                        console.log('Error in get payment: ', err_6.message);
                        throw err_6;
                    case 3: return [2 /*return*/];
                }
            });
        });
    };
    return CheckoutClient;
}());
exports.CheckoutClient = CheckoutClient;
exports.default = CheckoutClient;
