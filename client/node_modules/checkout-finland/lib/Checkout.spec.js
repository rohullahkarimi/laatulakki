"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var Checkout_1 = __importDefault(require("./Checkout"));
var uuid_1 = require("uuid");
describe('Checkout client', function () {
    describe('create payment', function () {
        test('success if everything correct', function () { return __awaiter(void 0, void 0, void 0, function () {
            var payment, client, res;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        payment = {
                            stamp: uuid_1.v1(),
                            reference: '3759170',
                            amount: 1525,
                            currency: 'EUR',
                            language: 'FI',
                            items: [
                                {
                                    unitPrice: 1525,
                                    units: 1,
                                    vatPercentage: 24,
                                    productCode: '#1234',
                                    deliveryDate: '2018-09-01',
                                    stamp: uuid_1.v1(),
                                    merchant: '695874',
                                    reference: 'kurssi-1'
                                }
                            ],
                            customer: {
                                email: 'test.customer@example.com'
                            },
                            redirectUrls: {
                                success: 'https://ecom.example.com/cart/success',
                                cancel: 'https://ecom.example.com/cart/cancel'
                            }
                        };
                        client = new Checkout_1.default('695861', 'MONISAIPPUAKAUPPIAS');
                        return [4 /*yield*/, client.createPayment(payment)];
                    case 1:
                        res = _a.sent();
                        expect(res).toBeDefined();
                        return [2 /*return*/];
                }
            });
        }); });
        test('error if secret wrong', function () { return __awaiter(void 0, void 0, void 0, function () {
            var payment, client, err_1;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        payment = {
                            stamp: uuid_1.v1(),
                            reference: '3759170',
                            amount: 1525,
                            currency: 'EUR',
                            language: 'FI',
                            items: [
                                {
                                    unitPrice: 1525,
                                    units: 1,
                                    vatPercentage: 24,
                                    productCode: '#1234',
                                    deliveryDate: '2018-09-01',
                                    stamp: uuid_1.v1(),
                                    merchant: '695874',
                                    reference: 'kurssi-1'
                                }
                            ],
                            customer: {
                                email: 'test.customer@example.com'
                            },
                            redirectUrls: {
                                success: 'https://ecom.example.com/cart/success',
                                cancel: 'https://ecom.example.com/cart/cancel'
                            }
                        };
                        client = new Checkout_1.default('695861', 'AIPPUAKAUPPIAS');
                        _a.label = 1;
                    case 1:
                        _a.trys.push([1, 3, , 4]);
                        return [4 /*yield*/, client.createPayment(payment)];
                    case 2:
                        _a.sent();
                        return [3 /*break*/, 4];
                    case 3:
                        err_1 = _a.sent();
                        expect(err_1.statusCode).toBe(401);
                        return [3 /*break*/, 4];
                    case 4: return [2 /*return*/];
                }
            });
        }); });
    });
    describe('get payment', function () {
        test('success if everything correct', function () { return __awaiter(void 0, void 0, void 0, function () {
            var payment, client, transactionId, res;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        payment = {
                            stamp: uuid_1.v1(),
                            reference: '3759170',
                            amount: 1525,
                            currency: 'EUR',
                            language: 'FI',
                            items: [
                                {
                                    unitPrice: 1525,
                                    units: 1,
                                    vatPercentage: 24,
                                    productCode: '#1234',
                                    deliveryDate: '2018-09-01',
                                    stamp: uuid_1.v1(),
                                    merchant: '695874',
                                    reference: 'kurssi-1'
                                }
                            ],
                            customer: {
                                email: 'test.customer@example.com'
                            },
                            redirectUrls: {
                                success: 'https://ecom.example.com/cart/success',
                                cancel: 'https://ecom.example.com/cart/cancel'
                            }
                        };
                        client = new Checkout_1.default('695861', 'MONISAIPPUAKAUPPIAS');
                        return [4 /*yield*/, client.createPayment(payment)];
                    case 1:
                        transactionId = (_a.sent()).transactionId;
                        return [4 /*yield*/, client.getPayment(transactionId)];
                    case 2:
                        res = _a.sent();
                        expect(res).toBeDefined();
                        return [2 /*return*/];
                }
            });
        }); });
    });
});
